// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sdk.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EnableStatus int32

const (
	EnableStatus_EnableStatusDisabled EnableStatus = 0
	EnableStatus_EnableStatusEnabled  EnableStatus = 1
)

var EnableStatus_name = map[int32]string{
	0: "EnableStatusDisabled",
	1: "EnableStatusEnabled",
}

var EnableStatus_value = map[string]int32{
	"EnableStatusDisabled": 0,
	"EnableStatusEnabled":  1,
}

func (x EnableStatus) String() string {
	return proto.EnumName(EnableStatus_name, int32(x))
}

func (EnableStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{0}
}

type VerifyStatus int32

const (
	VerifyStatus_VerifyStatusUnverified VerifyStatus = 0
	VerifyStatus_VerifyStatusVerified   VerifyStatus = 1
)

var VerifyStatus_name = map[int32]string{
	0: "VerifyStatusUnverified",
	1: "VerifyStatusVerified",
}

var VerifyStatus_value = map[string]int32{
	"VerifyStatusUnverified": 0,
	"VerifyStatusVerified":   1,
}

func (x VerifyStatus) String() string {
	return proto.EnumName(VerifyStatus_name, int32(x))
}

func (VerifyStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{1}
}

type BoolValue int32

const (
	BoolValue_BoolValueFalse BoolValue = 0
	BoolValue_BoolValueTrue  BoolValue = 1
)

var BoolValue_name = map[int32]string{
	0: "BoolValueFalse",
	1: "BoolValueTrue",
}

var BoolValue_value = map[string]int32{
	"BoolValueFalse": 0,
	"BoolValueTrue":  1,
}

func (x BoolValue) String() string {
	return proto.EnumName(BoolValue_name, int32(x))
}

func (BoolValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{2}
}

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{0}
}
func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return m.Size()
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{1}
}
func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return m.Size()
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type SimpleResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{2}
}
func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return m.Size()
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// 按limit分页
type ListParam struct {
	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (m *ListParam) Reset()         { *m = ListParam{} }
func (m *ListParam) String() string { return proto.CompactTextString(m) }
func (*ListParam) ProtoMessage()    {}
func (*ListParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{3}
}
func (m *ListParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListParam.Merge(m, src)
}
func (m *ListParam) XXX_Size() int {
	return m.Size()
}
func (m *ListParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListParam.DiscardUnknown(m)
}

var xxx_messageInfo_ListParam proto.InternalMessageInfo

func (m *ListParam) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListParam) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 路由项
type RouteItem struct {
	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	App           string   `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	ModuleName    string   `protobuf:"bytes,3,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	ModuleVersion int32    `protobuf:"varint,4,opt,name=moduleVersion,proto3" json:"moduleVersion,omitempty"`
	Handler       string   `protobuf:"bytes,5,opt,name=handler,proto3" json:"handler,omitempty"`
	Endpoint      string   `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	HttpMethod    string   `protobuf:"bytes,7,opt,name=httpMethod,proto3" json:"httpMethod,omitempty"`
	Origin        string   `protobuf:"bytes,8,opt,name=origin,proto3" json:"origin,omitempty"`
	IsPublic      int32    `protobuf:"varint,9,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	IsRawResponse int32    `protobuf:"varint,10,opt,name=isRawResponse,proto3" json:"isRawResponse,omitempty"`
	Permissions   []string `protobuf:"bytes,11,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Url           string   `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`
	Comment       string   `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (m *RouteItem) Reset()         { *m = RouteItem{} }
func (m *RouteItem) String() string { return proto.CompactTextString(m) }
func (*RouteItem) ProtoMessage()    {}
func (*RouteItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_70decb0fb6f436df, []int{4}
}
func (m *RouteItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RouteItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RouteItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RouteItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteItem.Merge(m, src)
}
func (m *RouteItem) XXX_Size() int {
	return m.Size()
}
func (m *RouteItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteItem.DiscardUnknown(m)
}

var xxx_messageInfo_RouteItem proto.InternalMessageInfo

func (m *RouteItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RouteItem) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RouteItem) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *RouteItem) GetModuleVersion() int32 {
	if m != nil {
		return m.ModuleVersion
	}
	return 0
}

func (m *RouteItem) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *RouteItem) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *RouteItem) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *RouteItem) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *RouteItem) GetIsPublic() int32 {
	if m != nil {
		return m.IsPublic
	}
	return 0
}

func (m *RouteItem) GetIsRawResponse() int32 {
	if m != nil {
		return m.IsRawResponse
	}
	return 0
}

func (m *RouteItem) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *RouteItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RouteItem) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterEnum("hdget.protobuf.EnableStatus", EnableStatus_name, EnableStatus_value)
	proto.RegisterEnum("hdget.protobuf.VerifyStatus", VerifyStatus_name, VerifyStatus_value)
	proto.RegisterEnum("hdget.protobuf.BoolValue", BoolValue_name, BoolValue_value)
	proto.RegisterType((*EmptyRequest)(nil), "hdget.protobuf.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "hdget.protobuf.EmptyResponse")
	proto.RegisterType((*SimpleResponse)(nil), "hdget.protobuf.SimpleResponse")
	proto.RegisterType((*ListParam)(nil), "hdget.protobuf.ListParam")
	proto.RegisterType((*RouteItem)(nil), "hdget.protobuf.RouteItem")
}

func init() { proto.RegisterFile("sdk.proto", fileDescriptor_70decb0fb6f436df) }

var fileDescriptor_70decb0fb6f436df = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe3, 0xa4, 0x4d, 0xeb, 0x69, 0x12, 0xc2, 0x52, 0x95, 0x55, 0x0f, 0x56, 0x14, 0x71,
	0x88, 0x72, 0x68, 0x24, 0xb8, 0xc1, 0x89, 0xaa, 0x45, 0x42, 0x02, 0x54, 0x39, 0x90, 0x03, 0xb7,
	0x4d, 0x3c, 0x4d, 0x56, 0x78, 0xbd, 0xcb, 0xfe, 0x01, 0x95, 0xa7, 0xe0, 0xb1, 0x38, 0xf6, 0xc8,
	0x11, 0x25, 0x4f, 0xc0, 0x1b, 0xa0, 0x5d, 0xdb, 0xc1, 0x3d, 0x79, 0x7e, 0xdf, 0xe7, 0x9d, 0x9d,
	0x6f, 0xb4, 0x10, 0x9b, 0xec, 0xcb, 0x85, 0xd2, 0xd2, 0x4a, 0x32, 0xd8, 0x64, 0x6b, 0xb4, 0x25,
	0x2c, 0xdd, 0xed, 0x78, 0x00, 0xbd, 0x6b, 0xa1, 0xec, 0x5d, 0x8a, 0x5f, 0x1d, 0x1a, 0x3b, 0x7e,
	0x04, 0xfd, 0x8a, 0x8d, 0x92, 0x85, 0xc1, 0xf1, 0x14, 0x06, 0x73, 0x2e, 0x54, 0x8e, 0xb5, 0x42,
	0x28, 0x1c, 0x09, 0x34, 0x86, 0xad, 0x91, 0x46, 0xa3, 0x68, 0x12, 0xa7, 0x35, 0x8e, 0x5f, 0x41,
	0xfc, 0x8e, 0x1b, 0x7b, 0xc3, 0x34, 0x13, 0x84, 0xc0, 0x81, 0xaa, 0xff, 0xe9, 0xa4, 0xa1, 0x26,
	0xe7, 0x70, 0xec, 0xbf, 0x73, 0xfe, 0x03, 0x69, 0x3b, 0xe8, 0x7b, 0x1e, 0xff, 0x6d, 0x43, 0x9c,
	0x4a, 0x67, 0xf1, 0xad, 0x45, 0x41, 0x06, 0xd0, 0xe6, 0x59, 0x75, 0xb6, 0xcd, 0x33, 0x32, 0x84,
	0x0e, 0x53, 0x2a, 0x1c, 0x8a, 0x53, 0x5f, 0x92, 0x04, 0x40, 0xc8, 0xcc, 0xe5, 0xf8, 0x81, 0x09,
	0xa4, 0x9d, 0x60, 0x34, 0x14, 0xf2, 0x0c, 0xfa, 0x25, 0x2d, 0x50, 0x1b, 0x2e, 0x0b, 0x7a, 0x30,
	0x8a, 0x26, 0x87, 0xe9, 0x43, 0xd1, 0x87, 0xd9, 0xb0, 0x22, 0xcb, 0x51, 0xd3, 0xc3, 0x32, 0x4c,
	0x85, 0x7e, 0x56, 0x2c, 0x32, 0x25, 0x79, 0x61, 0x69, 0x37, 0x58, 0x7b, 0xf6, 0x77, 0x6f, 0xac,
	0x55, 0xef, 0xd1, 0x6e, 0x64, 0x46, 0x8f, 0xca, 0xbb, 0xff, 0x2b, 0xe4, 0x0c, 0xba, 0x52, 0xf3,
	0x35, 0x2f, 0xe8, 0x71, 0xf0, 0x2a, 0xf2, 0x3d, 0xb9, 0xb9, 0x71, 0xcb, 0x9c, 0xaf, 0x68, 0x1c,
	0xc6, 0xd9, 0xb3, 0x9f, 0x97, 0x9b, 0x94, 0x7d, 0xaf, 0xf7, 0x4c, 0xa1, 0x9c, 0xf7, 0x81, 0x48,
	0x46, 0x70, 0xa2, 0x50, 0x0b, 0x6e, 0xfc, 0xf4, 0x86, 0x9e, 0x8c, 0x3a, 0x93, 0x38, 0x6d, 0x4a,
	0x7e, 0x53, 0x4e, 0xe7, 0xb4, 0x57, 0x6e, 0xca, 0xe9, 0xdc, 0x67, 0x5c, 0x49, 0x21, 0xb0, 0xb0,
	0xb4, 0x5f, 0x66, 0xac, 0x70, 0xfa, 0x1a, 0x7a, 0xd7, 0x05, 0x5b, 0xe6, 0x38, 0xb7, 0xcc, 0x3a,
	0x43, 0x28, 0x9c, 0x36, 0xf9, 0x8a, 0x1b, 0x0f, 0xd9, 0xb0, 0x45, 0x9e, 0xc2, 0x93, 0xa6, 0x53,
	0xd6, 0xd9, 0x30, 0x9a, 0x5e, 0x41, 0x6f, 0x81, 0x9a, 0xdf, 0xde, 0x55, 0x2d, 0xce, 0xe1, 0xac,
	0xc9, 0x9f, 0x8a, 0x6f, 0x9e, 0x78, 0x68, 0x42, 0xe1, 0xb4, 0xe9, 0x2d, 0x6a, 0x27, 0x9a, 0x3e,
	0x87, 0xf8, 0x52, 0xca, 0x7c, 0xc1, 0x72, 0x87, 0x84, 0xc0, 0x60, 0x0f, 0x6f, 0x58, 0x6e, 0x70,
	0xd8, 0x22, 0x8f, 0xa1, 0xbf, 0xd7, 0x3e, 0x6a, 0x87, 0xc3, 0xe8, 0xf2, 0xe5, 0xaf, 0x6d, 0x12,
	0xdd, 0x6f, 0x93, 0xe8, 0xcf, 0x36, 0x89, 0x7e, 0xee, 0x92, 0xd6, 0xfd, 0x2e, 0x69, 0xfd, 0xde,
	0x25, 0xad, 0xcf, 0xa3, 0x35, 0xb7, 0x1b, 0xb7, 0xbc, 0x58, 0x49, 0x31, 0x0b, 0xef, 0x7d, 0xe6,
	0x03, 0xcb, 0x62, 0x56, 0x3f, 0xfb, 0x65, 0x37, 0x54, 0x2f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x78, 0x4b, 0xee, 0xe7, 0x1a, 0x03, 0x00, 0x00,
}

func (m *EmptyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmptyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmptyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *EmptyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmptyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmptyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *SimpleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SimpleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SimpleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PageSize != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.Page != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RouteItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RouteItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RouteItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Permissions) > 0 {
		for iNdEx := len(m.Permissions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Permissions[iNdEx])
			copy(dAtA[i:], m.Permissions[iNdEx])
			i = encodeVarintSdk(dAtA, i, uint64(len(m.Permissions[iNdEx])))
			i--
			dAtA[i] = 0x5a
		}
	}
	if m.IsRawResponse != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.IsRawResponse))
		i--
		dAtA[i] = 0x50
	}
	if m.IsPublic != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.IsPublic))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Origin) > 0 {
		i -= len(m.Origin)
		copy(dAtA[i:], m.Origin)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Origin)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.HttpMethod) > 0 {
		i -= len(m.HttpMethod)
		copy(dAtA[i:], m.HttpMethod)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.HttpMethod)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Endpoint) > 0 {
		i -= len(m.Endpoint)
		copy(dAtA[i:], m.Endpoint)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Endpoint)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Handler) > 0 {
		i -= len(m.Handler)
		copy(dAtA[i:], m.Handler)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.Handler)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ModuleVersion != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.ModuleVersion))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ModuleName) > 0 {
		i -= len(m.ModuleName)
		copy(dAtA[i:], m.ModuleName)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.ModuleName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.App) > 0 {
		i -= len(m.App)
		copy(dAtA[i:], m.App)
		i = encodeVarintSdk(dAtA, i, uint64(len(m.App)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintSdk(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSdk(dAtA []byte, offset int, v uint64) int {
	offset -= sovSdk(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EmptyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *EmptyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SimpleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	return n
}

func (m *ListParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovSdk(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovSdk(uint64(m.PageSize))
	}
	return n
}

func (m *RouteItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovSdk(uint64(m.Id))
	}
	l = len(m.App)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	l = len(m.ModuleName)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	if m.ModuleVersion != 0 {
		n += 1 + sovSdk(uint64(m.ModuleVersion))
	}
	l = len(m.Handler)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	l = len(m.Endpoint)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	l = len(m.HttpMethod)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	l = len(m.Origin)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	if m.IsPublic != 0 {
		n += 1 + sovSdk(uint64(m.IsPublic))
	}
	if m.IsRawResponse != 0 {
		n += 1 + sovSdk(uint64(m.IsRawResponse))
	}
	if len(m.Permissions) > 0 {
		for _, s := range m.Permissions {
			l = len(s)
			n += 1 + l + sovSdk(uint64(l))
		}
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovSdk(uint64(l))
	}
	return n
}

func sovSdk(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSdk(x uint64) (n int) {
	return sovSdk(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EmptyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmptyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmptyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmptyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmptyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmptyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SimpleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SimpleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SimpleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RouteItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RouteItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RouteItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field App", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.App = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleVersion", wireType)
			}
			m.ModuleVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Handler", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Handler = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HttpMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Origin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPublic", wireType)
			}
			m.IsPublic = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsPublic |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRawResponse", wireType)
			}
			m.IsRawResponse = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsRawResponse |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Permissions = append(m.Permissions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSdk(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSdk
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSdk
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSdk
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSdk        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSdk          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSdk = fmt.Errorf("proto: unexpected end of group")
)
